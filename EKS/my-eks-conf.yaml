---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: my-eks-201
  region: us-east-1
  version: "1.26"

vpc:
  id: "vpc-086d900dc73769e59"
  subnets:
    public:
      my-public-201-a:
        id: "subnet-02d65773a35a64e91"
        az: "us-east-1a"
      my-public-201-b:
        id: "subnet-060cc4333d78fe403"
        az: "us-east-1b"
    private:
      my-private-201-a:
        id: "subnet-00ffd23735c154c2a"
        az: "us-east-1a"
      my-private-201-b:
        id: "subnet-0c334846b0cc7b1ff"
        az: "us-east-1b"
  clusterEndpoints:
    publicAccess: true
    privateAccess: true
  nat:
    gateway: Disable

iam:
  withOIDC: true
  serviceAccounts:
    - metadata:
        name: aws-load-balancer-controller
        namespace: kube-system
      wellKnownPolicies:
        awsLoadBalancerController: true
    - metadata:
        name: ebs-csi-controller-sa
        namespace: kube-system
      wellKnownPolicies:
        ebsCSIController: true
    - metadata:
        name: efs-csi-controller-sa
        namespace: kube-system
      wellKnownPolicies:
        efsCSIController: true
    - metadata:
        name: external-dns
        namespace: kube-system
      wellKnownPolicies:
        externalDNS: true
    - metadata:
        name: cert-manager
        namespace: cert-manager
      wellKnownPolicies:
        certManager: true
    - metadata:
        name: cluster-autoscaler
        namespace: kube-system
        labels: { aws-usage: "cluster-ops" }
      wellKnownPolicies:
        autoScaler: true

nodeGroups:
  - name: pvt-201-a-1
    labels: { role: workers }
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/my-eks-201: "shared"
    instancesDistribution:
      instanceTypes:
        - t2.medium
    desiredCapacity: 1
    minSize: 0
    maxSize: 3
    privateNetworking: true
    subnets:
      - my-private-201-a
  - name: pub-201-a-1
    labels: { role: workers }
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/my-eks-201: "shared"
    instancesDistribution:
      instanceTypes:
        - t2.medium
    desiredCapacity: 0
    minSize: 0
    maxSize: 1
    subnets:
      - my-public-201-a
  - name: pub-201-a-1-taint
    labels: { role: workers }
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/my-eks-201: "shared"
    taints:
      - key: nodegroup
        value: pub-201-a-1-taint
        effect: NoSchedule
    instancesDistribution:
      instanceTypes:
        - t2.medium
    desiredCapacity: 1
    minSize: 0
    maxSize: 5
    subnets:
    - my-public-201-a
